package index

type ChatParams struct {
	GroupName string
	Color     string
	ContactID int64
	Messages  []Message
}

script configureChat(contactId int64) {
	const chatInput = document.querySelector('.chat-input')
	messageContainer = document.getElementById('message-container')
	messageContainer.scrollTop = messageContainer.scrollHeight
	if (chatInput) {
		chatInput.addEventListener('keydown', (event) => {
			if (event.key === 'Enter' && !event.shiftKey) {
				event.preventDefault()

				if (chatInput.value === '') {
					return
				}
				
				sendMessage(false, contactId, chatInput.value)
				chatInput.value = ''
			}
		})
	}
}

templ ShowChat(chatParams ChatParams) {
	<div class="ml-2 my-2 text-2xl flex items-center">
		@userIcon(chatParams.GroupName, chatParams.Color)
		<span>{ chatParams.GroupName }</span>
	</div>
	<div id="message-container" class="border-inherit flex flex-col overflow-y-auto">
		@ShowMessages(chatParams.ContactID, 1, chatParams.Messages)
	</div>
	<div
		class="mt-auto mx-5 mb-3 shadow-lg bg-slate-900 rounded-md px-2 pt-2 pb-1 flex flex-col align-middle"
	>
		<textarea
			class="w-full bg-slate-900 text-white chat-input outline-none"
			placeholder="Type a message..."
		></textarea>
	</div>
	<img class="htmx-indicator" src="/public/spinner.gif"/>
	@configureChat(chatParams.ContactID)
}

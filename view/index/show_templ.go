// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package index

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/mderler/go_chat/view/layout"

type Message struct {
	Author  string
	Message string
	Left    bool
}

func Show(fullName string, messages []Message) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div onload=\"{ main() }\" class=\"base-grid bg-gray-100 dark:bg-slate-900 text-black dark:text-white\"><div class=\"border-r flex flex-row gap-2 items-center\"><div class=\"text-xl ml-2 flex items-center\"><div class=\"ml-2 flex items-center\"><span class=\"h-8 w-8 mr-2 border rounded-full bg-pink-400 text-center\">MD</span> <span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fullName)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/index/show.templ`, Line: 24, Col: 22}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span></div><button hx-post=\"/logout\">&#x1F6AA;</button></div><button class=\"ml-auto mr-2\">&#x270F;</button></div><div class=\"ml-2 text-2xl flex items-center\"><span class=\"h-8 w-8 mr-2 border rounded-full bg-blue-400 text-xl text-center\">SD</span> <span>Stefan Derler</span></div><section class=\"dark:bg-slate-600 w-80 border-r\"><ul class=\"flex flex-col gap-2 mx-2 mt-2\"><div class=\"border border-black rounded-md flex px-1 py-1\"><span class=\"h-8 w-8 mr-2 border rounded-full bg-blue-400 text-xl text-center\">SD</span> <span>Stefan Derler</span></div></ul></section><section class=\"dark:bg-slate-600 chat-grid h-full border-inherit\"><div class=\"border-inherit flex flex-col overflow-y-auto\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, m := range messages {
				templ_7745c5c3_Err = message(m.Author, m.Message, m.Left).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"mt-auto mx-5 mb-3 shadow-lg bg-slate-900 rounded-md px-2 pt-2 pb-1 flex flex-col align-middle\"><textarea class=\"w-full bg-slate-900 text-white chat-input outline-none\" placeholder=\"Type a message...\"></textarea></div></section></div><script>\n\t\t\tdocument.querySelector('.chat-input')\n\t\t\t\t.addEventListener('keydown', (event) => {\n\t\t\t\t\tif (event.key === 'Enter' && !event.shiftKey) {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tconsole.log('Send message:', chatInput.value)\n\t\t\t\t\t\tchatInput.value = ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
